name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for commit date
    
    - name: Extract R version from Dockerfile
      id: r-version
      run: |
        # Extract R version from ARG R_VER="4.5.1" pattern
        R_VERSION=$(grep -E "ARG R_VER=" Dockerfile | head -1 | sed -E 's/.*R_VER="([0-9]+\.[0-9]+(\.[0-9]+)?)".*/\1/')
        
        # If no R_VER found, try other common patterns
        if [ -z "$R_VERSION" ]; then
          R_VERSION=$(grep -E "(FROM.*r-base:|FROM.*rocker/|R_VERSION=|ARG R_VERSION=)" Dockerfile | head -1 | sed -E 's/.*[:=]"?([0-9]+\.[0-9]+(\.[0-9]+)?)"?.*/\1/')
        fi
        
        # If still no version found, try ENV or ARG statements
        if [ -z "$R_VERSION" ]; then
          R_VERSION=$(grep -E "(ENV|ARG).*R_VERSION" Dockerfile | head -1 | sed -E 's/.*R_VERSION[= ]+"?([0-9]+\.[0-9]+(\.[0-9]+)?)"?.*/\1/')
        fi
        
        # Default to "latest" if no version found
        if [ -z "$R_VERSION" ]; then
          R_VERSION="latest"
        fi
        
        echo "R_VERSION=$R_VERSION" >> $GITHUB_OUTPUT
        echo "Detected R version: $R_VERSION"
    
    - name: Get last commit date
      id: commit-date
      run: |
        COMMIT_DATE=$(git log -1 --format=%cd --date=format:%Y%m%d)
        echo "COMMIT_DATE=$COMMIT_DATE" >> $GITHUB_OUTPUT
        echo "Last commit date: $COMMIT_DATE"
    
    - name: Generate Docker tag
      id: docker-tag
      run: |
        TAG="r${{ steps.r-version.outputs.R_VERSION }}-${{ steps.commit-date.outputs.COMMIT_DATE }}"
        echo "TAG=$TAG" >> $GITHUB_OUTPUT
        echo "Docker tag: $TAG"
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: westendstatistics/rstats-dev
        tags: |
          type=raw,value=${{ steps.docker-tag.outputs.TAG }}
          type=raw,value=r${{ steps.r-version.outputs.R_VERSION }},enable={{is_default_branch}}
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Output image details
      run: |
        echo "Image pushed with tags:"
        echo "${{ steps.meta.outputs.tags }}"
